{"version":3,"sources":["webpack:///./index.js","webpack:///./js/colors.js"],"names":["colors","refs","startButton","document","querySelector","stopButton","body","timer","intervalId","isActive","start","this","setInterval","randomIntegerFromInterval","length","setAttribute","stop","clearInterval","addEventListener","bind","min","max","Math","floor","random"],"mappings":"kHAAA,4B,mBCAA,IAAMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAEIC,EAAO,CACXC,YAAaC,SAASC,cAAc,yBACpCC,WAAYF,SAASC,cAAc,wBACnCE,KAAMH,SAASC,cAAc,SAGzBG,EAAQ,CACZC,WAAY,KACZC,UAAU,EACVC,MAHY,WAINC,KAAKF,WAGTE,KAAKF,UAAW,EAChBE,KAAKH,WAAaI,aAAY,WAC5BC,EAA0B,EAAG,CAACb,EAAOc,OAAS,IAC9Cb,EAAKK,KAAKS,aACR,QADF,eAGIf,EAAOa,EAA0B,EAAG,CAACb,EAAOc,OAAS,QAGxD,OAGLE,KAnBY,WAoBVL,KAAKF,UAAW,EAChBQ,cAAcN,KAAKH,YACnBG,KAAKH,WAAa,OAItBP,EAAKC,YAAYgB,iBAAiB,QAASX,EAAMG,MAAMS,KAAKZ,IAC5DN,EAAKI,WAAWa,iBAAiB,QAASX,EAAMS,KAAKG,KAAKZ,IAE1D,IAAMM,EAA4B,SAACO,EAAKC,GACtC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,M","file":"main.995cc27acd79a1c0b0ef.js","sourcesContent":["import './styles.css';\n\nimport './js/colors';\n","const colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\nconst refs = {\n  startButton: document.querySelector('[data-action=\"start\"]'),\n  stopButton: document.querySelector('[data-action=\"stop\"]'),\n  body: document.querySelector('body'),\n};\n\nconst timer = {\n  intervalId: null,\n  isActive: false,\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    this.isActive = true;\n    this.intervalId = setInterval(() => {\n      randomIntegerFromInterval(0, [colors.length - 1]);\n      refs.body.setAttribute(\n        'style',\n        `background: ${\n          colors[randomIntegerFromInterval(0, [colors.length - 1])]\n        }`,\n      );\n    }, 1000);\n  },\n\n  stop() {\n    this.isActive = false;\n    clearInterval(this.intervalId);\n    this.intervalId = null;\n  },\n};\n\nrefs.startButton.addEventListener('click', timer.start.bind(timer));\nrefs.stopButton.addEventListener('click', timer.stop.bind(timer));\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n"],"sourceRoot":""}